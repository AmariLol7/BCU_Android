apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        release {
            storeFile file('C:\\Users\\user\\Desktop\\Utility\\Plan\\KeyStore\\keystore.jks')
            storePassword 'battlecatsultimate'
            keyAlias 'key0'
            keyPassword 'battlecatsultimate'
        }
    }
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.mandarin.bcu"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "0.16.13"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "YOU_CANT_FIND_PASSWORD", "\"" + getPassword() + "\""
        signingConfig signingConfigs.release
    }
    buildTypes {
        debug {
            debuggable true
            buildConfigField "Boolean", "DEBUG_MODE", "true"
        }
        release {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildToolsVersion = '30.0.3'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/CONTRIBUTORS.md'
        exclude 'META-INF/LICENSE.md'
        exclude("META-INF/*.kotlin_module")
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.wear:wear:1.3.0-alpha02'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.0-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha07'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.google.android.material:material:1.7.0-alpha03'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation ('com.google.apis:google-api-services-drive:v3-rev20220709-1.32.1') {
        exclude group:'com.google.guava'
    }
    implementation 'com.google.api-client:google-api-client:1.33.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.8.1'
    implementation 'androidx.core:core-ktx:1.9.0-alpha05'
    implementation 'com.nhaarman.supertooltips:library:3.0.0'
    implementation 'org.jcodec:jcodec:0.2.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    annotationProcessor 'org.androidannotations:androidannotations:4.8.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
}
repositories {
    mavenCentral()
}

def getPassword() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("password")
}
